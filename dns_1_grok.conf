input {
  file {
    path => "/home/ubuntu/elk_hello_world/dns_1.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

# Custom patterns
IPPERSO [0-9]+.[0-9]+.[0-9]+.[0-9]+
PORT [0-9]+
INDEX [0-9+* ]
TRASH [0-9()]+

filter {
  grok {
    match => {"message" => "%{TIME:temps} IP %{IPPERSO:ip_1}\.%{PORT:port_1} > %{IPPERSO:ip_2}\.%{PORT:port_2}: %{INDEX:id}"}
  } 

  mutate {
    convert => {
      "temps" => "string"
      "ip_1" => "string"
      "ip_2" => "string"
      "port_1" => "string"
      "port_2" => "string"
      "id" => "string"
    }
  }
  
#  ruby {
#    add_field => {"ip_public" => "0"}
#    code => event[ip_public] = event.get('ip1')[0..1]
#  
#    if [ip_public] == "10" {
#      mutate {
#         replace => {"ip_publlic" => "%{ip_1}"}
#         add_field => {"ip_privee" => "%{ip_2}"}
#
#         add_field => {"port_public" => "%{port_1}"}
#         add_field => {"port_prive" => "%{port_2}"}
#      }
#    } else {
#      mutate {
#         replace => {"ip_public" => "%{ip_2}"}
#         add_field => {"ip_privee" => "%{ip_1}"}
#       
#         add_field => {"port_public" => "%{port_2}"}
#         add_field => {"port_prive" => "%{port_1}"}
#      }
#    }
#
#    if [+] in [id] {
#      grok {
#        match => {"message" => "%{WORD:type_dns}\? %{HOSTNAME:site} %{TRASH}"}
#      }
#    } else {
#      grok {
#        match => {"message" => "%{BASE10NUM:nbre_answer}/%{BASE10NUM:nbre_servers}/%{BASE10NUM:nbre_auth} %{GREEDYDATA:reponses}"}
#      }
#    }    
#  }
}


output {
  elasticsearch {
    index => "zuzu20170808.1012"
    document_type => "zdyndns"
    hosts => "http://10.92.104.200:9200"
  }
  stdout {
    codec => json
  }
}

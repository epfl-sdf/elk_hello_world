input {
  file {
    path => "/home/ubuntu/elk_hello_world/dns_100.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  grok {
    patterns_dir => ["./dns_pattern_grok.conf"]
    match => {"message" => "%{TIME:temps} IP %{IPV4:ip_source}\.%{INT:port_source} > %{IPV4:ip_destination}\.%{INT:port_destination}: %{INDEX:id}"}
  } 
 
  if "+" in [id] {
    grok {
      patterns_dir => ["./dns_pattern_grok.conf"]
      match => {"message" => "%{WORD:type_dns}\? %{HOSTNAME:site} %{TRASH}"}
    }    
  } else {
    grok {
      match => {"message" => "%{INT:nbre_answer}/%{INT:nbre_servers}/%{INT:nbre_auth}"}
    }
  }

  if nbre_answer == 1 {
    grok {
      patterns_dir => ["./dns_patterns_grok.conf"]
      match => {"message" => "%{DNS:reponse_1} %{SITE:site_1}"}
    }
  } else {
    ruby {
      code => '
        @i = nbre_answer

        while @i > 1 do
          grok {
            patterns_dir => ["./dns_patterns_grok.conf"]
            match => {"message" => "%{DNS:} %{SITE:}, "}
          }

          @i -= 1
        end
      
        if i == 1
          grok {
            patterns_dir => ["./dns_patterns_grok.conf"]
            match => {"message" => "%{DNS:reponse_1} %{SITE:site_1}"}
          }
        end
      '
    }   
  }

  grok {
    pattern_dir => ["./dns_pattern_grok.conf"]
    match => {"message" => "%{TRASH}"}
  }

  mutate {
    remove_field => "message"
    remove_field => "path"
  }
}

output {
  elasticsearch {
    hosts => 'http://10.92.104.200:9200'
    index => "dns_log_20170817"
    document_type => "logstash_grok"
  }
}
